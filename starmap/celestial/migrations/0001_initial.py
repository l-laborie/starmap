# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-26 12:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of catalog', max_length=50, unique=True)),
                ('abbreviation', models.CharField(help_text='Abbreviation of catalog', max_length=5, unique=True)),
                ('description', models.CharField(help_text='Description of the object cataloged', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CatalogIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=50)),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='celestial.Catalog')),
            ],
        ),
        migrations.CreateModel(
            name='Constellation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of constellation', max_length=50, unique=True)),
                ('abbreviation', models.CharField(help_text='Abbreviation of constellation', max_length=3, unique=True)),
                ('origin', models.CharField(help_text='origin of constellation', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('right_ascension', models.FloatField(help_text="he star's right ascension for epoch and equinox 2000.0.")),
                ('declination', models.FloatField(help_text="he star's declination for epoch and equinox 2000.0.")),
                ('right_ascension_radian', models.FloatField(help_text="he star's right ascension for epoch and equinox 2000.0 in radians.")),
                ('declination_radian', models.FloatField(help_text="he star's declination for epoch and equinox 2000.0 in radians")),
                ('magnitude', models.FloatField(help_text="The star's apparent visual magnitude.")),
                ('proper', models.CharField(blank=True, help_text='A common name for the star or deep sky object,such as "Barnard\'s Star" or "Sirius" for star.I have taken these names primarily from the Hipparcos project\'s web site, which lists representative names for the 150 brightest stars and many of the 150 closest stars. I have added a few names to this list. Most of the additions are designations from catalogs mostly now forgotten (e.g., Lalande, Groombridge, and Gould ["G."]) except for certain nearby stars which are still best known by these designations.', max_length=50, null=True)),
                ('type', models.CharField(choices=[('*', 'Single Star'), ('**', 'Double Star'), ('***', 'Triple Star'), ('Ast', 'Asterism'), ('Gxy', 'Galaxy'), ('GxyCld', 'Bright cloud/knot in a galaxy'), ('GC', 'Globular Cluster'), ('HIIRgn', 'HII Region'), ('Neb', 'Nebula (emission or reflection)'), ('NF', 'Not Found'), ('OC', 'Open Cluster'), ('PN', 'Planetary Nebula'), ('SNR', 'Supernova Remnant'), ('MWSC', 'Milky Way Star Cloud')], help_text="The object's type", max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='DeepSky',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='celestial.Object')),
                ('semi_major_axes', models.FloatField(help_text="Semi-major axes of the object, in arcminutes. If r2 is undefined, r1 is interpreted as the object's radius.")),
                ('semi_minor_axes', models.FloatField(help_text="Semi--minor axes of the object, in arcminutes. If r2 is undefined, r1 is interpreted as the object's radius.")),
                ('angle', models.FloatField(help_text=' Position angle of the semimajor axis of the object, in degrees. Only defined if r1 and r2 are present.')),
            ],
            bases=('celestial.object',),
        ),
        migrations.CreateModel(
            name='Star',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='celestial.Object')),
                ('distance', models.FloatField(blank=True, help_text="The star's distance in parsecs computed from parallax data in Hipparcos.", null=True)),
                ('proper_motion_in_right_ascension', models.FloatField(blank=True, help_text='in milli arc seconds per year.', null=True)),
                ('proper_motion_in_declination', models.FloatField(blank=True, help_text='in milli arc seconds per year.', null=True)),
                ('radial_velocity', models.FloatField(blank=True, help_text='in km/sec', null=True)),
                ('absolute_visual_magnitude', models.FloatField(help_text="The star's absolute visual magnitude(its apparent magnitude from a distance of 10 parsecs).")),
                ('spectral_type', models.CharField(blank=True, help_text="The star's spectral type, if known.", max_length=50, null=True)),
                ('color_index', models.FloatField(blank=True, help_text="The star's color index (blue magnitude - visual magnitude), if known.", null=True)),
                ('luminosity', models.FloatField(help_text="Star's luminosity as a multiple of Solar luminosity.")),
                ('base', models.CharField(blank=True, help_text='Catalog ID or name for this multi-star system. Currently only used for Gliese stars.', max_length=50, null=True)),
                ('var', models.CharField(blank=True, help_text="Star's standard variable star designation, when known", max_length=50, null=True)),
                ('var_min', models.FloatField(blank=True, help_text=' Star\'s approximate magnitude range, for variables. This value is based on the Hp magnitudes for the range in the original Hipparcos catalog, adjusted to the V magnitude scale to match the "mag" field', null=True)),
                ('var_max', models.FloatField(blank=True, help_text=' Star\'s approximate magnitude range, for variables. This value is based on the Hp magnitudes for the range in the original Hipparcos catalog, adjusted to the V magnitude scale to match the "mag" field', null=True)),
                ('companion_stars', models.ManyToManyField(to='celestial.Star')),
                ('primary_companion_star', models.ForeignKey(blank=True, help_text='If Multiple star system, ID of primary star', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='celestial.Star')),
            ],
            bases=('celestial.object',),
        ),
        migrations.AddField(
            model_name='object',
            name='constellation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='celestial.Constellation'),
        ),
        migrations.AddField(
            model_name='object',
            name='identifiers',
            field=models.ManyToManyField(related_name='_object_identifiers_+', through='celestial.CatalogIdentifier', to='celestial.Catalog'),
        ),
        migrations.AddField(
            model_name='catalogidentifier',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='celestial.Object'),
        ),
        migrations.AlterUniqueTogether(
            name='catalogidentifier',
            unique_together=set([('identifier', 'object', 'catalog')]),
        ),
    ]
